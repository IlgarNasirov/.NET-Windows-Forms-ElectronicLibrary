<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="add_user.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JQAAAABJRU5ErkJggg==
</value>
  </data>
</root>